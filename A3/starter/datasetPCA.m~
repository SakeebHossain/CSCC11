%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% CSC C11 - Assignment 3 - Dimensionality reduction by PCA
%
% In this function you will apply PCA to an input dataset to
% return a low-dimensional representation for the input data.
%
% Inputs:
% 
% input_data    -   Input dataset, one sample PER ROW
% k             -   Number of dimensions for the low-dimensional data
%
% Return values:
%
% LodWim_data   -   The low-dimensional representation of the dataset
%                   one sample per row
% V             -   The matrix with the PCA directions (one per column)
% mu            -   The mean of the input data (needed for reconstruction)
% 
% F.J.E. Nov, 2017
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function [LowDim_data,V,mu]=datasetPCA(input_data, k);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% COMPLETE THIS TEXT BOX:
%
% 1) Student Name: Ahnaf Sakeeb Hossain
% 2) Student Name:		
%
% 1) Student number: 1001537483
% 2) Student number:
% 
% 1) UtorID hossa171
% 2) UtorID
% 
% We hereby certify that the work contained here is our own
% Ahnaf Sakeeb Hossain
% ____________________             _____________________
% (sign with your name)            (sign with your name)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% TO DO: Complete the code below to find the PCA directions.
%        
%        Note: Use the eigs() function for computing the 
%              eigenvalues and eigenvectors.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% clean data?? (zero mean, feature selection...)
% Normalize image
im=input_data; %%%%%%%%%%%%%%

im=double(im);
im=im-min(im(:));
im=im/max(im(:));
imS=size(im);
figure(1);clf;image(im);axis image;title('Input Image');

% Now, reshape the image into an array of (m * n, 3), where each row has
% the RGB values for one image pixel
im=reshape(im,[imS(1)*imS(2) 3]);

input_data = im; %%%%%%%%%%%%%%%

% sum up all data vectors. This is our average (needed for creation
% of covariance matrix.
N=size(input_data,1);
D=size(input_data,2);
mu=sum(input_data)/N;



% create covariance matrix
K = cov(input_data - mu);

% compute eigenvectors and eigenvalues
[V,~] = eigs(K, k);  % V is eigenvectors, 
LowDim_data = zeros(N, k);

% for i=1:N
%     current_y = input_data(i, :);
%     new_y = V' * (current_y - mu)';
%     LowDim_data = [LowDim_data; new_y']; 
% end

LowDim_data = 


